/*
*  Query posts for a relationship value.
*  This method uses the meta_query LIKE to match the string "123" to the database value a:1:{i:0;s:3:"123";} (serialized array)
*/

$process_log_items = get_posts(array(
	'post_type' => 'process_item_log',
				'posts_per_page'         => '-1',
				'meta_query' => array(
		array(
			'key' => 'process_log', // name of custom field
			'value' => '"' . $process_log_id . '"', // matches exaclty "123", not just 123. This prevents a match for "1234"
			'compare' => 'LIKE'
		)
	)
));
?>
<?php if( $process_log_items ): ?>
	<div class="process_log_items">
	<ul>
	<?php foreach( $process_log_items as $process_log_item ): ?>
		<li data-id="<?php echo $process_log_item->ID; ?>" data-item="<?php the_field( "item_number", $process_log_item->ID ); ?>" data-completed="<?php the_field( "completed", $process_log_item->ID ); ?>"></li>
	<?php endforeach; ?>
	</ul>
	</div>
<?php endif;

$i = 0; ?>
<script type="text/javascript">

	jQuery('document').ready( function() {

		checklist_count = jQuery('.process-log-progress li').length;

		for(i = 1; i <= checklist_count; i++) {

			checklist_item_count = jQuery('.process_log_items li[data-item="'+ i +'"]').length;

			if (checklist_item_count > 0) {
				// console.log(checklist_item_count + " i - "+ i);
				jQuery('.process-log-progress li[data-id="'+ i +'"').attr('data-completed', "true");
			} else {
				jQuery('.process-log-progress li[data-id="'+ i +'"').attr('data-completed', "false");
			}

		}

		// Select current in progress item
		jQuery('.process-log-progress li[data-completed="false"]:first').attr("data-pending", "true").attr("data-active", "true");

		// Updates current count
		current = jQuery('.process-log-progress li[data-active="true"]').attr('data-id');
		jQuery(".process-log-progress .current").text(current);

		// Updates total count
		jQuery(".process-log-progress .total").text(checklist_count);

		// Updates arrow visiblity
		if (current == 1) {
			jQuery(".process-log-progress .previous").css('opacity',0);
		}
		if (current == checklist_count) {
			jQuery(".process-log-progress .next").css('opacity',0);
		}


		jQuery('.process-log-progress .previous').click(function() {
			process_log_progress( -1 );
		});
		jQuery('.process-log-progress .next').click(function() {
			process_log_progress( +1 );
		});


	});

	function process_log_progress( direction ) {

		// Total items
		current = jQuery('.process-log-progress li[data-active="true"]').attr('data-id');
		new_selection = parseInt(current) + parseInt(direction);

		if (new_selection > 0 && new_selection <= checklist_count) {
			// Assigned the new active selection
			jQuery('.process-log-progress li[data-active="true"]').removeAttr('data-active');
			jQuery('.process-log-progress li[data-id="'+ new_selection +'"]').attr("data-active", "true");

			// Display arrows
			jQuery(".process-log-progress .previous").css('opacity',1);
			jQuery(".process-log-progress .next").css('opacity',1);

			// Hide arrows if first or last checklist items
			if (new_selection == 1) {
				jQuery(".process-log-progress .previous").css('opacity',0);
			}
			if (new_selection == checklist_count) {
				jQuery(".process-log-progress .next").css('opacity',0);
			}

			// Update status numbers
			jQuery(".process-log-progress .current").text(new_selection);


			// If item logs, then display completed date
			if ( jQuery('.process_log_items li[data-item='+new_selection+']').length > 0 ) {
				completed = jQuery('.process_log_items li[data-item='+new_selection+']').first().attr('data-completed');
				jQuery('.task-actions').html(completed + ' <i class="fa fa-check-square" aria-hidden="true"></i>');
			} else if( jQuery('.process-log-progress li[data-id="'+ new_selection +'"]').data('pending') == true ) {
				jQuery('.task-actions').html('<a href="#">Onward!<i class="fa fa-check-square-o" aria-hidden="true"></i></a>');
			} else {
				jQuery('.task-actions').html('Finish previous checklist item(s) first.<i class="fa fa-square-o" aria-hidden="true"></i>');
			}

		}

	};

	jQuery( document ).keydown(function( event ) {
		switch(event.which) {
			case 37 : //Arrow left
			process_log_progress( -1 );
			break;
			case 39 : //Arrow right
			process_log_progress( +1 );
			break;
		}
	});
</script>

<div class="process-log-progress">

<a href="#" class="previous"><i class="fa fa-chevron-left" aria-hidden="true"></i></a> <span class="current"></span>/<span class="total"></span> <a href="#" class="next"><i class="fa fa-chevron-right" aria-hidden="true"></i></a>

 <?php






 <div class="task-actions">

	 <a href="#">Onward!<i class="fa fa-check-square-o" aria-hidden="true"></i></a>

 </div>
</div>
